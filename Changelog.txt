v2.1-rc.1
+ Images (currently only used for suit icons) can now also be overwritten
    This works analogously to themes.
* New colors for dark and light themes
* Added a "highlight text" theme color, which is used to emphasize text
* Changed font to NT Somic Bold (licensed under OFL)
    Replaced the triangles in the theme selector with highlights to indicate the currently selected theme, as those triangles do not exist in this font
* Fixed custom.ohsctheme not being added to the Git repo

v2.1-beta.8
+ Clicking on file names in the theme selector opens the file, when applicable
    Does not open files stored inside the jar
+ Added a refresh button to the theme selector, which reloads all themes
* It is now possible to overwrite the included themes
    For example, creating a file "dark.ohsctheme" in the themes folder will supersede the built-in dark theme
    Additionally, creating a file "themes.txt" in the themes folder overwrites the built-in themes.txt, allowing built-in themes to be hidden
* Fixed the unintentional reversion of the error message saving change from 2.1b4

v2.1-beta.7
+ Added theme selector GUI
    Replaces the previous functionality of the theme button, which would just cycle to the next theme
    Shows all available themes including their names, files, and colors
    Buttons can be clicked to show pop-up and error message colors
    Hovering over the filename shows the full path to the file
+ Added the ability to load additional themes from the data directory
    On initial launch, a new file "external_themes.txt" will be created as well as one example theme in custom.ohsctheme
    Themes listed here will be shown below the built-in themes in the selector menu
* Fixed issue where adding players would set the scoreboard to bidding mode

v2.1-beta.6
* Fixed resource loading on Windows

v2.1-beta.5
+ Files are now saved in OS-specific locations
    Windows: C:\Users\USERNAME\Appdata\Roaming\OHSCv2\
    Linux: /home/USERNAME/.local/share/OHSCv2/
    MacOS: /Users/USERNAME/Library/Application Support/OHSCv2/
    This means the jar file should work more easily on all platforms.
* Significant code cleanup
    All fractions used for graphics have been replaced with decimals
    text() is now overridden to work around the vertical alignment issues
* Alignment of some text and UI elements have been slightly tweaked

v2.1-beta.4
* Reformatted all code into .java files instead of .pde
    Mouse and Key files were moved back into the main file
    This change will be expanded upon later
    This allows the project to be developed outside of the Processing IDE
* Move screen states to enums
- Do not save the state of the error message (not really useful)

v2.1-beta.3
* Refactoring code
    Separate logic from mousePressed into individual methods
    Renamed numberOfPlayersChanged() to updatePlayers()
* Slightly changed when the trick index is or is not reset

v2.1-beta.2
+ Add grayscale themes
    Mono dark with a black background and white text
    Mono light with a white background and black text
* Improved light theme
* Fixed issue where changing the theme using the theme button would not affect player colors

v2.1-beta.1
+ Add initial theme support
    Currently no theme editor within the scoreboard, but custom themes can be added manually
    Button currently cycles through loaded themes, but a full GUI for selecting a theme will be added in the future
    Currently has a dark theme and a light theme
* Bids no longer show at all until entered, instead of showing a 0
    Each player must have a bid entered directly, even if that bid is 0
    Right-clicking will initialize bid to 0
    Left-clicking will initialize bid to 1
* Code cleanup
    Subclasses split into separate files
- Known issue: It is possible to bypass bid checks by adding a player after bids have been entered [FIXED: 2.1b2]

v2.0
  No changes from 2.0rc4; Release project on GitHub

v2.0-rc.4
* Revert a change made in 2.0rc2 that became redundant in 2.0rc3

v2.0-rc.3
* Use textAlign(CENTER, CENTER) instead of a weird hack to align the trick sequence preview

v2.0-rc.2
+ Added two more suits: dots and crosses, corresponding to a six-suit deck
    These are shown in a blue color and can be accessed using the keys O and X respectively or by cycling through the suits as usual
* Fixed the trick sequence editor being broken in 2.0rc1
* The trick sequence preview now stays aligned vertically when the text size changes

v2.0-rc.1
* Reworked tile system to be based on overall width and height rather than requiring references to PApplet.width and PApplet.height in every Tile constructor
    Tile constructor now takes four floats between 0 and 1 which are mapped into coordinates
* drawButton() method now takes a text size multiplier which is scaled to screen width
    All uses of this method previously used a small number multiplied by width (i.e. 0.02*width)
    Such a parameter would be replaced with simply 0.02
* Some debug functionality has been unified under a single variable (boolean debug)
    This currently includes frametime displaying as well as printing the system properties on startup
* Increased the frequency of blinking while editing text from 1 Hz to 1.5 Hz

v2.0-beta.7
* Reworked state saving and loading to use a new format
    It is now possible for names to include semicolons
    Commas are still not allowed

v2.0-beta.6
+ Added logging for each hand
    This shows how many tricks each player bid and took as well as the change in their score
    Autosaves in a separate file (latest.log) but is merged into the final save file upon game completion
+ Hands played is now stored globally
    Previously it was stored per-player
    This new value is also stored in the autosave format
* Fixed several variable names to be more consistent
* Overrode PApplet#loadImage(String) to immediately exit the program if an image can't be loaded
    This avoids needing to check if each PImage is null individually
- Known issue: Autosave format is generally not compatible across versions and is difficult to read [FIXED: 2.0b7]
    This should be addressed before v2.0 is finished

v2.0-beta.5
* Fixed club and heart icons being reversed due to mistake in 2.0b4

v2.0-beta.4
+ Added "end game" button
    Ends game and saves result as normal
    Requires enter + right click to confirm
* Slightly shifted GUI to accommodate new button
* Fixed directory handling by detecting platform-specific separator
* Fixed error message fade-out to be timed based on 30 fps rather than 50
* Fixed error message fading failing to block program from entering low-framerate mode
* Simplified code in a few places
    Merged some variable declarations into single lines based on logical grouping
    Added a new trumpIcon() method to avoid repetitive if-statements
    Changed getKeyValue() and trickMode() methods to use switch blocks instead of if-statements

v2.0-beta.3
* Trump suit indicator is no longer font-based and now uses images, to avoid issues with the default font sometimes not including the suits
* Active framerate decreased from 50 to 30; passive framerate remains 2

v2.0-beta.2
+ Added framerate limiting after no interaction for 2 seconds in order to improve power efficiency
+ Added restart button to game over screen
+ Added trick index (i.e. hand number) to autosave format
* Save directory now works on Linux
- Known issue: Save directory no longer works on Windows [FIXED: 2.0b4]
- Known issue: Some graphical effects may be impacted by the new framerate-limiting feature


v2.0-beta.1
+ Added autosave and autoload capabilities
    For now, this simply saves the state of the scoreboard continuously and loads the save upon opening the program
* Improved how negative scores are displayed
    The minus sign is drawn separately from the number, and is repositioned and reduced in width
* Scores that overflow are now cut off graphically, rather than overflowing into adjacent cells
- Names can no longer include the characters , and ;
    This may be changed in the future
